require('dotenv').config();
const express = require('express');
const cors = require('cors');
const { ethers } = require('ethers');
const path = require('path');

const app = express();
app.use(cors());
app.use(express.json());

// ╪к┘И┘Б┘К╪▒ ╪з┘Д┘Е┘Д┘Б╪з╪к ╪з┘Д╪л╪з╪и╪к╪й ┘Е┘Ж ┘Е╪м┘Д╪п public
app.use(express.static(path.join(__dirname, 'public')));

// ╪е╪╣╪п╪з╪п ┘Е╪▓┘И╪п ╪з┘Д╪┤╪и┘Г╪й (Binance Smart Chain) - ethers 6.x
const provider = new ethers.JsonRpcProvider('https://bsc-dataseed.binance.org/');

// ╪╣┘Ж┘И╪з┘Ж USDT ╪╣┘Д┘Й BSC
const usdtAddress = '0x55d398326f99059fF775485246999027B3197955';

// ABI ┘Е╪и╪│╪╖ ┘Д┘А USDT (┘Д┘Е╪╣╪з┘Е┘Д╪з╪к transfer ┘И balanceOf)
const usdtAbi = [
  "function transfer(address to, uint256 amount) public returns (bool)",
  "function balanceOf(address account) external view returns (uint256)"
];

// ┘В╪▒╪з╪б╪й ╪з┘Д┘Е┘Б╪к╪з╪н ╪з┘Д╪о╪з╪╡ ┘Е┘Ж ┘Е╪к╪║┘К╪▒╪з╪к ╪з┘Д╪и┘К╪ж╪й (env)
const privateKey = process.env.PRIVATE_KEY;
if (!privateKey) {
  console.error("тЪая╕П  ┘К╪м╪и ╪к╪╣┘К┘К┘Ж PRIVATE_KEY ┘Б┘К ┘Е┘Д┘Б .env");
  process.exit(1);
}

// ╪е┘Ж╪┤╪з╪б ╪з┘Д┘Е╪н┘Б╪╕╪й ╪з┘Д╪н┘В┘К┘В┘К╪й
const wallet = new ethers.Wallet(privateKey, provider);

// ╪е┘Ж╪┤╪з╪б ╪╣┘В╪п USDT
const usdtContract = new ethers.Contract(usdtAddress, usdtAbi, wallet);

// API: ╪з┘Д╪н╪╡┘И┘Д ╪╣┘Д┘Й ╪╣┘Ж┘И╪з┘Ж ╪з┘Д┘Е╪н┘Б╪╕╪й ╪з┘Д╪н┘В┘К┘В┘К╪й
app.get('/wallet-address', (req, res) => {
  res.json({ address: wallet.address });
});

// API: ╪з┘Д╪н╪╡┘И┘Д ╪╣┘Д┘Й ╪▒╪╡┘К╪п USDT ┘Д┘Д┘Е╪н┘Б╪╕╪й ╪з┘Д╪н┘В┘К┘В┘К╪й
app.get('/balance', async (req, res) => {
  try {
    const address = req.query.address;
    if (!address) return res.status(400).json({ error: 'Address required' });
    const balanceRaw = await usdtContract.balanceOf(address);
    // USDT ╪╣┘Д┘Й BSC ┘Д┘З 18 ╪о╪з┘Ж╪й ╪╣╪┤╪▒┘К╪й ┘Д╪░╪з ┘Ж┘В╪│┘Е ╪╣┘Д┘Й 10^18
    const balance = ethers.formatUnits(balanceRaw, 18);
    res.json({ balance });
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// API: ╪е╪▒╪│╪з┘Д USDT (╪е┘Е╪з ╪м┘Е╪╣ ╪з┘Д╪г╪▒╪и╪з╪н ╪г┘И ╪е╪▒╪│╪з┘Д ╪о╪з╪▒╪м┘К)
app.post('/send-usdt', async (req, res) => {
  try {
    const { recipient, amount } = req.body;
    const to = recipient || wallet.address; // ╪е╪░╪з ┘Д┘Е ┘К╪к┘Е ╪к╪н╪п┘К╪п ┘Е╪│╪к┘Д┘Е ╪к╪▒╪│┘Д ╪е┘Д┘Й ╪з┘Д┘Е╪н┘Б╪╕╪й ┘Ж┘Б╪│┘З╪з
    if (!amount || amount <= 0) return res.status(400).json({ success: false, error: 'Amount must be > 0' });

    // USDT ╪╣╪п╪п ╪з┘Д╪о╪з┘Ж╪з╪к ╪з┘Д╪╣╪┤╪▒┘К╪й 18
    const amountWei = ethers.parseUnits(amount.toString(), 18);

    const tx = await usdtContract.transfer(to, amountWei);
    await tx.wait();

    res.json({ success: true, txHash: tx.hash });
  } catch (err) {
    res.status(500).json({ success: false, error: err.message });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`ЁЯЪА Server running on port ${PORT}`);
  console.log(`Wallet address: ${wallet.address}`);
});
